import pandas as pd
import os
import json
import psycopg2
from sqlalchemy import create_engine


airnb_path = "C:/Users/Happy/Desktop/capstone/airnb_data/"
airnb_dir = os.listdir(airnb_path)

airnb_h = {'id':[],'Hotel_name':[],'Property_type':[],'Room_type':[],'Bed_type':[],'Accommodates':[],'Rooms':[],'Beds':[],'Bathroom':[],
         'Max_stay_nights':[],'Min_stay_nights':[],'Price':[],'Maintenance':[],'Guests':[],'Guest_charge':[],'Total_Reviews':[],'Review_rating':[]}

airbnb_host= {'id':[],'Host_id':[],'Host_name':[],'Host_location':[],'Host_response_time':[],'Host_neighbourhood':[],'Host_response_rate':[],
              'Host_is_superhost':[],'Host_has_profile_pic':[],'Host_identity_verified':[],'Host_listings_count':[],'Host_total_listings_count':[]}

airbnb_address={'id':[],'Street':[],'Suburb':[],'Government_area':[],'City':[],'Country':[],'Country_code':[],'Latitude':[],'Longitude':[]}

airbnb_review={'id':[],'Review_id':[],'Review_date':[]}

for file_name in airnb_dir:
    file_path = airnb_path+ file_name
    file=open(file_path, "r") 
    data = json.load(file)

    #slicing the data 
    for i in data:
        id=i.get("_id")
        h_name=i.get("name")
        pro_type=i.get("property_type")
        r_type=i.get("room_type")
        b_type=i.get("bed_type")
        min_n=i.get("minimum_nights")
        max_n=i.get("maximum_nights")
        accomod= i.get("accommodates")
        bedroom= i.get("bedrooms")
        beds= i.get("beds")
        bath=i.get("bathrooms")
        price=i.get("price")
        mainta=i.get("cleaning_fee")
        Guest=i.get("guests_included")
        add=i.get("extra_people")
        no_reviews=i.get('number_of_reviews')
        review_score=i.get('review_scores')
        review_rating=review_score.get('review_scores_rating')

    #getting host details
        host=i.get("host")

        ho_id = host.get('host_id')
        ho_name=host.get('host_name')
        ho_loc=host.get('host_location')
        ho_res_time=host.get('host_response_time')
        ho_neigh=host.get('host_neighbourhood')
        ho_res_rate=host.get('host_response_rate')
        ho_super=host.get('host_is_superhost')
        ho_propic=host.get('host_has_profile_pic')
        ho_ver_id=host.get('host_identity_verified')
        ho_list_c=host.get('host_listings_count')
        ho_tot_list_c=host.get('host_total_listings_count')

    #getting address details
        address= i.get('address')

        street=address.get('street')
        suburb=address.get('suburb')
        gov_area=address.get('government_area')
        market=address.get('market')
        country=address.get('country')
        country_code=address.get('country_code')

        location=address.get('location')
        coord=location.get('coordinates')

    #appending the data 
        airnb_h['id'].append(id)
        airnb_h['Hotel_name'].append(h_name)
        airnb_h['Property_type'].append(pro_type)
        airnb_h['Room_type'].append(r_type)
        airnb_h['Bed_type'].append(b_type)
        airnb_h['Accommodates'].append(accomod)
        airnb_h['Total_Reviews'].append(no_reviews)
        

    #Handeling null values and conveting to integer

        room_val=str(bedroom).replace('NaN','0') if bedroom is not None else '0'
        room_int=int(room_val)
        airnb_h['Rooms'].append(room_int)

        beds_val=str(beds).replace('NaN','0') if beds is not None else '0'
        beds_int=int(beds_val)
        airnb_h['Beds'].append(beds_int) 

        airnb_h['Maintenance'].append(str(mainta).replace('NaN','0'))
        airnb_h['Bathroom'].append(str(bath).replace('NaN','0')) 
        airnb_h['Review_rating'].append(str(review_rating).replace('Nan','0'))
        
        airnb_h['Max_stay_nights'].append(int(min_n))
        airnb_h['Min_stay_nights'].append(int(max_n))
        airnb_h['Price'].append(int(price))
        airnb_h['Guest_charge'].append(int(add))
        airnb_h['Guests'].append(int(Guest))
        

    #appending host data
        airbnb_host['id'].append(id)
        airbnb_host['Host_id'].append(ho_id)
        airbnb_host['Host_name'].append(ho_name)
        airbnb_host['Host_location'].append(ho_loc)
        airbnb_host['Host_response_time'].append(str(ho_res_time).replace('None',''))
        airbnb_host['Host_neighbourhood'].append(ho_neigh)
        airbnb_host['Host_response_rate'].append(str(ho_res_rate).replace('NaN','0'))
        airbnb_host['Host_is_superhost'].append(ho_super)
        airbnb_host['Host_has_profile_pic'].append(ho_propic)
        airbnb_host['Host_identity_verified'].append(ho_ver_id)
        airbnb_host['Host_listings_count'].append(int(ho_list_c))
        airbnb_host['Host_total_listings_count'].append(int(ho_tot_list_c))

    #appending address details
        airbnb_address['id'].append(id)
        airbnb_address['Street'].append(street)
        airbnb_address['Suburb'].append(suburb)
        airbnb_address['Government_area'].append(gov_area)
        airbnb_address['City'].append(market)
        airbnb_address['Country'].append(country)
        airbnb_address['Country_code'].append(country_code)
        airbnb_address['Latitude'].append(coord[1])
        airbnb_address['Longitude'].append(coord[0])

    #getting review data and appending to df

        re=i['reviews']
        for j in re:
            re_id=j.get('_id')
            re_date=j.get('date')
        
            airbnb_review['id'].append(int(id))
            airbnb_review['Review_id'].append(int(re_id))
            airbnb_review['Review_date'].append(re_date)
    
#converting to data frame
nb_hotel_df=pd.DataFrame(airnb_h)

#change data type
nb_hotel_df["Bathroom"]= nb_hotel_df["Bathroom"].replace('None', '0').astype(str).astype(float).astype(int)
nb_hotel_df["Maintenance"]= nb_hotel_df["Maintenance"].replace('None', '0').astype(str).astype(float).astype(int)
nb_hotel_df["Review_rating"]=nb_hotel_df['Review_rating'].replace('None', '0').astype(str).astype(float).astype(int)

#converting host data to data frame
nb_host_df=pd.DataFrame(airbnb_host)      


#change data type    
nb_host_df["Host_response_rate"]= nb_host_df["Host_response_rate"].replace('None', '0').astype(str).astype(int)

#converting address to data frame
nb_address_df=pd.DataFrame(airbnb_address)    

#converting review data to data frame
nb_review_df=pd.DataFrame(airbnb_review)




mydb=psycopg2.connect(host="localhost",
                        user="postgres",
                        password="root",
                        database="phonepe",
                        port="5432")
mycursor=mydb.cursor()

engine = create_engine('postgresql+psycopg2://postgres:root@localhost/Airbnb')

nb_hotel_df.to_sql('hotel', engine, if_exists='replace', index=False)
nb_host_df.to_sql('host', engine, if_exists='replace', index=False)
nb_address_df.to_sql('address', engine, if_exists='replace', index=False)
nb_review_df.to_sql('review', engine, if_exists='replace', index=False)
    
